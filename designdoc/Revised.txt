3.1 Login
    This major component handles logging users into the system via one of two authentication methods. First time users will be prompted to complete a registration form handled by the registration subcomponent when logging in from either authentication method.
 
    3.1.1 Component 1 Login
        This component exists solely to allow users gain access to the LabAssist system. This page is the default page on the server, as such all users start with this component. The login component has two methods. Method 1 is labeled Kiosk login and requires only an Employee ID or Student ID as input. Method 1 only grants access to the clock-in/clock-out (see 3.2) functionality. Method 2 is labeled User Login requiring both a username and password. Method 2 only grants access to the Portal component (see 3.3) of the system.  

        3.1.1.1 Component Interfaces
            Logic
            -----
            attemptPassLogin() -> Checks username and password combination by binding the LDAP server with the supplied credentials. 
            attemptKioskLogin() -> Queries to see if Employee ID/Student ID is registered. Internally calls kioskLoginCheck() and directs user to registration or on to the clock-in/clock-out system.
            isRegistered() -> Queries database to determine weather if a database record exists for user attempting to login
            kioskLoginCheck() -> Queries the database to determine if a record exists for the given ID
            -----
            
            Display
            -----
            printHeader() -> Prints static html code for the page start.
            printStartBody() -> Prints static html code for the opening body tags.
            printForm(html, error) -> Takes the dynamic html registration form and generated errors. Inserts dynamic code into static code and prints.
            printEndBody() -> Prints static html code for closing the page.
            -----

        3.1.1.2 Component Design Description
            Component is implemented as an Action-Domain-Responder model where login.php would be the action, login-logic.php  the domain, and login-page.php the responder.The register action first checks to ensure that the user is currently logged into the system via a session variable and redirects all users to the clock-in/clock-out component if the kiosk flag is set or the portal component if the userLogin flag is set. 
            
            When using method 1 the domain queries the database to determine if the user has an account already registered. If not, the system redirects to the register component (3.1.2). If so, users are directed to the clock-in/clock-out component (3.2).
            
            When using method 2 the domain queries the LDAP server with the supplied username and password pair via a bind call. If the bind fails, the responder displays an appropriate message. If the bind succeeds, the domain then queries the database to determine if a tuple exists with the appropriate user information. If no tuple is found then the domain redirects to the register component (3.2), otherwise the domain redirects to the portal component (3.3).



    3.1.2 Component 2 Register
        This component exists solely to register users with the LabAssist system. Users are directed to this component when a valid login attempt is made with the login component (see 3.1.1) and no record is found in the database with matching criteria.

        3.1.2.1 Component Interfaces
            Logic
            -----
            restoreForm() -> Restores previous values if form reloads.
            generateRegistration() -> Generates the html registration form with values provided by LDAP controller.
            attemptRegistration() -> Attempts to register the user. Performs input validation and internally calls insertRegistration.
            insertRegistration() -> Queries the database attempting to add user information to the database.
            -----
            
            Display
            -----
            printHeader() -> Prints static html code for the page start.
            printStartBody() -> Prints static html code for the opening body tags.
            printForm(html, error) -> Takes the dynamic html registration form and generated errors. Inserts dynamic code into static code and prints.
            printEndBody() -> Prints static html code for closing the page.
            -----

        3.1.2.2 Component Design Description
            Component is implemented as an Action-Domain-Responder model where user_registration.php would be the action, user_registration-logic.php  the domain, and user_registration-page.php the responder. The register action first checks to ensure that the user has only come from the login system via a session variable and redirects all users to the login screen if the variable is empty or not set. Next, the domain queries the LDAP server for basic user information such as email, and name by reverse looking up the information they provided at the login form submission. The responder then prints the pre-filled form to the screen. On form submission the action page informs the domain to attempt to register the user. On success, the user will proceed on to the next component in the sequence. On failure the user may update the input and try again or cancel. Cancelling returns the user to the login screen. At no point is a password ever stored in the local database before, during, and after registration. 


    3.1.4 WorkFlow
        Sequence Diagram

   
3.2 Clock-in/Clock-out
    This major handles loggin the time in/time out and the session for students arriving to and from a lab. 
    
    3.2.1 Component Clock-in Clock-out
        Students arrive here from a successful kiosk mode login and are given the option to clock in if not already clocked in or the ability to clock out if already clocked in. This componenet is only accessable from the kiosk mode login. 
        
        3.2.1.1 Component Interface
            Logic
            -----
            generateClockinClockoutForm() -> Calls Internal functions to generate form. Renders either clock in or clock out form based on results from isClockin().
            isClockin() -> Queries database to check for outstanding user clockin. Returns int status indicating true/false/error.
            genClockoutForm() -> Generates the form for a clock out 
            genLab(department) -> Creates the department listing for the clock-in form. Takes the previous value as parameter for resteroration if needed.
            genClass(department,Class) -> Creates the class listing for the clock-in form based on department. Takes the previous class as parameter for resteroration if needed.
            attemptClockinClockout() -> Master function that calls attemptClockin() or attemptClockout() internally depending on the result of isClockin();
            attemptClockin() -> Queries the database attempting to insert record of clock in
            attemptClockout() -> Queries the database attempting to update the appropriate outstanding clockin with the time out. 
            -----
            
            Display
            -----
            printHeader() -> Prints static html code for the page start.
            printStartBody() -> Prints static html code for the opening body tags.
            printForm(html, error) -> Takes the dynamic html registration form and generated errors. Inserts dynamic code into static code and prints.
            printEndBody() -> Prints static html code for closing the page.
            -----
        
        3.2.1.2 Component Design Description
            Users arrive at this component after a successful kiosk login. The component is implemented as an Action-Domain-Responder model where tutor_session.php would be the action, tutor_session-logic.php  the domain, and tutor_session-page.php the responder. The action module makes an initial check to ensure the user arrived from a successful kiosk login and then queries the domain to render the form. The domain checks the database to determine if the user has an outstanding clock in, if so, then the clock out form is generated and passed to the responder. If the user does not have an outstanding login, the login page is generated and passed to the responder. The generated page contains two dropdowns one for department and one for the class. After the user fills out the form and clicks submit, the action module calls attempt ClickinClockout() to insert or modify the database. If cancel is chosen the action module redirects the user to the login form. 

    3.2.2 WorkFlow


3.3 Portal
    3.3.1 Component 1 Home
        3.3.1.1 Component Interface
        
        3.3.1.2 Component Design Description


    3.3.2 Component 2 Q/A System
        3.3.2.1 Component Interface
        
        3.3.2.2 Component Design Description


    3.3.3 Component 3 Q/A System
        3.3.3.1 Component Interface
        
        3.3.3.2 Component Design Description


    3.3.3 Component 4 Q/A System
        3.3.4.1 Component Interface
        
        3.3.4.2 Component Design Description


    3.3.3 Component 5 Q/A System
        3.3.5.1 Component Interface
        
        3.3.5.2 Component Design Description


    3.3.3 Component 6 Q/A System
        3.3.6.1 Component Interface
        
        3.3.6.2 Component Design Description


    3.3.3 Component 7 Q/A System
        3.3.7.1 Component Interface
        
        3.3.7.2 Component Design Description


    3.3.3 Component 8 Q/A System
        3.3.8.1 Component Interface
        
        3.3.8.2 Component Design Description

        3.3.8.3 WorkFlow
        
